<Type Name="UpdateItemType" FullName="ExchangeWebServices.UpdateItemType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="636a7a054691c362203553c076b76ae0dc32b59e" />
    <Meta Name="ms.sourcegitcommit" Value="09f9993d313d1e3ec77e21f70573b3fced6eea2e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20611412" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UpdateItemType : ExchangeWebServices.BaseRequestType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit UpdateItemType extends ExchangeWebServices.BaseRequestType" />
  <TypeSignature Language="DocId" Value="T:ExchangeWebServices.UpdateItemType" />
  <TypeSignature Language="VB.NET" Value="Public Class UpdateItemType&#xA;Inherits BaseRequestType" />
  <TypeSignature Language="C++ CLI" Value="public ref class UpdateItemType : ExchangeWebServices::BaseRequestType" />
  <AssemblyInfo>
    <AssemblyName>EWS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>ExchangeWebServices.BaseRequestType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("code")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlType(Namespace="http://schemas.microsoft.com/exchange/services/2006/messages")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:ExchangeWebServices.UpdateItemType" /> Класс представляет запрос на обновление набора элементов.</summary>
    <remarks>
      <para>Можно добавить, установка или удаление свойств при обновлении элемента.</para>
      <para>При попытке отправить описание изменений, которое включает несколько свойств для изменения, <see cref="F:ExchangeWebServices.ResponseCodeType.ErrorIncorrectUpdatePropertyCount" /> будет возвращена ошибка.</para>
      <para />
    </remarks>
    <example>
      <para>В следующем примере кода показано, как обновить собрания. В этом примере выполняются следующие действия:</para>
      <list type="number">
        <item>
          <description>добавляет новый обязательного участника собрания.</description>
        </item>
        <item>
          <description>Обновляется время начала собрания для текущего времени на стороне клиента.</description>
        </item>
        <item>
          <description>Добавляет настраиваемое свойство MAPI к собранию.</description>
        </item>
        <item>
          <description>Удаляет все необязательных участников.</description>
        </item>
        <item>
          <description>Автоматически разрешает все конфликты в операции обновления.</description>
        </item>
        <item>
          <description>Отправляет обновление собрания всем участникам и сохраняет копию обновленные приглашения на собрание в папке <see cref="P:ExchangeWebServices.UpdateItemType.SavedItemFolderId" /> свойство определяет.</description>
        </item>
      </list>
      <code>static void UpdateItem(ExchangeServiceBinding esb)
{
    // Create calendar items to contain each non-deletion update.
    CalendarItemType ciAppendRA = new CalendarItemType();
    CalendarItemType ciSetStart = new CalendarItemType();
    CalendarItemType ciSetEP = new CalendarItemType();

    // Add a new required attendee to the calendar item.
    ciAppendRA.RequiredAttendees = new AttendeeType[1];
    ciAppendRA.RequiredAttendees[0] = new AttendeeType();
    ciAppendRA.RequiredAttendees[0].Mailbox = new EmailAddressType();
    ciAppendRA.RequiredAttendees[0].Mailbox.EmailAddress = "mskinner@example.com";
    // Identify the field to append.
    PathToUnindexedFieldType appReqAttendees = new PathToUnindexedFieldType();
    appReqAttendees.FieldURI = UnindexedFieldURIType.calendarRequiredAttendees;
    // Add the calendar item and the identified appended field to
    // the ItemChangeDescriptionType. This is an AppendToItemFieldType.
    AppendToItemFieldType append = new AppendToItemFieldType();
    append.Item = appReqAttendees;
    append.Item1 = ciAppendRA;

    // Set a new start time on a calendar item.
    ciSetStart.Start = DateTime.Now;
    ciSetStart.StartSpecified = true;
    // Identify the field to set.
    PathToUnindexedFieldType modStartTime = new PathToUnindexedFieldType();
    modStartTime.FieldURI = UnindexedFieldURIType.calendarStart;
    // Add the calendar item and the identified set field to
    // the ItemChangeDescriptionType. This is a SetItemFieldType.
    SetItemFieldType set = new SetItemFieldType();
    set.Item = modStartTime;
    set.Item1 = ciSetStart;

    // Set a custom property on a calendar item.
    PathToExtendedFieldType setMyProperty = new PathToExtendedFieldType();
    setMyProperty.DistinguishedPropertySetId = DistinguishedPropertySetType.PublicStrings;
    setMyProperty.DistinguishedPropertySetIdSpecified = true;
    setMyProperty.PropertyName = "Milestone date";
    setMyProperty.PropertyType = MapiPropertyTypeType.String;
    // Identify the custom property to set.
    ciSetEP.ExtendedProperty = new ExtendedPropertyType[1];
    ciSetEP.ExtendedProperty[0] = new ExtendedPropertyType();
    ciSetEP.ExtendedProperty[0].ExtendedFieldURI = setMyProperty;
    ciSetEP.ExtendedProperty[0].Item = "2007-07-18";
    // Add the calendar item and the identified custom property
    // to the ItemChangeDescriptionType. This is an SetItemFieldType.
    SetItemFieldType setCustomProp = new SetItemFieldType();
    setCustomProp.Item = setMyProperty;
    setCustomProp.Item1 = ciSetEP;

    // Delete optional attendees from the calendar item.
    PathToUnindexedFieldType delOptAttendees = new PathToUnindexedFieldType();
    delOptAttendees.FieldURI = UnindexedFieldURIType.calendarOptionalAttendees;
    // Add the property to delete to the ItemChangeDescriptionType.
    DeleteItemFieldType deletion = new DeleteItemFieldType();
    deletion.Item = delOptAttendees;            

    // Create the identifier of the item to update.
    ItemIdType itemId = new ItemIdType();
    itemId.Id = "AAAlAE1BQG";
    itemId.ChangeKey = "DwAAABYAAA";

    // Create and populate the request.
    UpdateItemType &lt;span class="label"&gt;request&lt;/span&gt; = new &lt;span class="label"&gt;UpdateItemType&lt;/span&gt;();
    &lt;span class="label"&gt;request&lt;/span&gt;.ItemChanges = new ItemChangeType[1] { new ItemChangeType() };
    &lt;span class="label"&gt;request&lt;/span&gt;.ItemChanges[0].Item = itemId;
    &lt;span class="label"&gt;request&lt;/span&gt;.ItemChanges[0].Updates = new ItemChangeDescriptionType[4];
    &lt;span class="label"&gt;request&lt;/span&gt;.ItemChanges[0].Updates[0] = append;
    &lt;span class="label"&gt;request&lt;/span&gt;.ItemChanges[0].Updates[1] = set;
    &lt;span class="label"&gt;request&lt;/span&gt;.ItemChanges[0].Updates[2] = deletion;
    &lt;span class="label"&gt;request&lt;/span&gt;.ItemChanges[0].Updates[3] = setCustomProp;

    &lt;span class="label"&gt;request&lt;/span&gt;.ConflictResolution = ConflictResolutionType.AutoResolve;
    &lt;span class="label"&gt;request&lt;/span&gt;.SendMeetingInvitationsOrCancellations = CalendarItemUpdateOperationType.SendToAllAndSaveCopy;
    &lt;span class="label"&gt;request&lt;/span&gt;.SendMeetingInvitationsOrCancellationsSpecified = true;

    // Send the update request and receive the response.
    UpdateItemResponseType response = esb.UpdateItem(&lt;span class="label"&gt;request&lt;/span&gt;);
    ArrayOfResponseMessagesType aormt = response.ResponseMessages;
    ResponseMessageType[] rmta = aormt.Items;

    foreach (ResponseMessageType rmt in rmta)
    {
        ItemInfoResponseMessageType respMsg = (rmt as ItemInfoResponseMessageType);
        foreach (ItemType item in respMsg.Items.Items)
        {
            Console.WriteLine("Item ID: " + item.ItemId.Id);
            Console.WriteLine("New change key: " + item.ItemId.ChangeKey);
            Console.ReadLine();
        }
    }
}</code>
      <para>
        <b>Примечание</b>: идентификатор и меняет ключ элемента в запросе URL были сокращены, чтобы сохранить удобочитаемость.</para>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UpdateItemType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:ExchangeWebServices.UpdateItemType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UpdateItemType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:ExchangeWebServices.UpdateItemType" /> Конструктор инициализирует новый экземпляр объекта <see cref="T:ExchangeWebServices.UpdateItemType" /> класса.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictResolution">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.ConflictResolutionType ConflictResolution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype ExchangeWebServices.ConflictResolutionType ConflictResolution" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.UpdateItemType.ConflictResolution" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictResolution As ConflictResolutionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::ConflictResolutionType ConflictResolution { ExchangeWebServices::ConflictResolutionType get(); void set(ExchangeWebServices::ConflictResolutionType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.ConflictResolutionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:ExchangeWebServices.UpdateItemType.ConflictResolution" /> Свойство получает или задает значение перечисления, представляющий тип разрешения конфликтов, который выполняется во время обновления. Это свойство является обязательным. Это свойство чтения и записи.</summary>
        <value>
          <see cref="P:ExchangeWebServices.UpdateItemType.ConflictResolution" /> Возвращает свойство <see cref="T:ExchangeWebServices.ConflictResolutionType" /> перечисления.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemChanges">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.ItemChangeType[] ItemChanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.ItemChangeType[] ItemChanges" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.UpdateItemType.ItemChanges" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemChanges As ItemChangeType()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;ExchangeWebServices::ItemChangeType ^&gt; ^ ItemChanges { cli::array &lt;ExchangeWebServices::ItemChangeType ^&gt; ^ get(); void set(cli::array &lt;ExchangeWebServices::ItemChangeType ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlArrayItem("ItemChange", IsNullable=false, Namespace="http://schemas.microsoft.com/exchange/services/2006/types")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.ItemChangeType[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:ExchangeWebServices.UpdateItemType.ItemChanges" /> Свойство получает или задает массив изменений элементов. Это свойство является обязательным. Это свойство чтения и записи.</summary>
        <value>
          <see cref="P:ExchangeWebServices.UpdateItemType.ItemChanges" /> Возвращает свойство <see cref="T:ExchangeWebServices.ItemChangeType" /> массива.</value>
        <remarks>
          <para>Каждый элемент в <see cref="T:ExchangeWebServices.ItemChangeType" /> массив соответствует одного элемента, чтобы изменить в базе данных Exchange.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageDisposition">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.MessageDispositionType MessageDisposition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype ExchangeWebServices.MessageDispositionType MessageDisposition" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.UpdateItemType.MessageDisposition" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageDisposition As MessageDispositionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::MessageDispositionType MessageDisposition { ExchangeWebServices::MessageDispositionType get(); void set(ExchangeWebServices::MessageDispositionType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.MessageDispositionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:ExchangeWebServices.UpdateItemType.MessageDisposition" /> Свойство получает или задает значение перечисления, которое описывает способ обработки элемента сообщения после обновления. Это свойство является обязательным для элементов сообщения, включая сообщения собрания, такие как отмен собрания, приглашений на собрания и ответы на приглашения. Это свойство чтения и записи.</summary>
        <value>
          <see cref="P:ExchangeWebServices.UpdateItemType.MessageDisposition" /> Возвращает свойство <see cref="T:ExchangeWebServices.MessageDispositionType" /> значение перечисления.</value>
        <remarks>
          <para>Необходимо установить <see cref="P:ExchangeWebServices.UpdateItemType.MessageDispositionSpecified" /> значение <b>true</b> , чтобы <see cref="P:ExchangeWebServices.UpdateItemType.MessageDisposition" /> сериализацию свойства в запросе Simple Object Access Protocol (SOAP).</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageDispositionSpecified">
      <MemberSignature Language="C#" Value="public bool MessageDispositionSpecified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MessageDispositionSpecified" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.UpdateItemType.MessageDispositionSpecified" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageDispositionSpecified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MessageDispositionSpecified { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:ExchangeWebServices.UpdateItemType.MessageDispositionSpecified" /> Свойство получает или задает логическое значение, указывающее, является ли <see cref="P:ExchangeWebServices.UpdateItemType.MessageDisposition" /> сериализацию свойства в запросе Simple Object Access Protocol (SOAP). Это свойство является обязательным, если <see cref="P:ExchangeWebServices.UpdateItemType.MessageDisposition" /> свойству. Это свойство чтения и записи.</summary>
        <value>
          <see cref="P:ExchangeWebServices.UpdateItemType.MessageDispositionSpecified" /> Свойство возвращает <b>значение true</b> , если <see cref="P:ExchangeWebServices.UpdateItemType.MessageDisposition" /> сериализацию свойства в запросе Simple Object Access Protocol (SOAP); в противном случае это свойство возвращает <b>значение false</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SavedItemFolderId">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.TargetFolderIdType SavedItemFolderId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.TargetFolderIdType SavedItemFolderId" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.UpdateItemType.SavedItemFolderId" />
      <MemberSignature Language="VB.NET" Value="Public Property SavedItemFolderId As TargetFolderIdType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::TargetFolderIdType ^ SavedItemFolderId { ExchangeWebServices::TargetFolderIdType ^ get(); void set(ExchangeWebServices::TargetFolderIdType ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.TargetFolderIdType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:ExchangeWebServices.UpdateItemType.SavedItemFolderId" /> Свойство получает или задает целевую папку для сохраненных элементов. Это свойство задается с помощью <see cref="T:ExchangeWebServices.FolderIdType" /> или <see cref="T:ExchangeWebServices.DistinguishedFolderIdType" /> объекта. Это свойство является необязательным. Это свойство чтения и записи.</summary>
        <value>
          <see cref="P:ExchangeWebServices.UpdateItemType.SavedItemFolderId" /> Возвращает свойство <see cref="T:ExchangeWebServices.TargetFolderIdType" /> объект, который может быть приведен на любой <see cref="T:ExchangeWebServices.FolderIdType" /> или <see cref="T:ExchangeWebServices.DistinguishedFolderIdType" /> объекта.</value>
        <remarks>
          <para>Если это свойство не задано и либо <see cref="P:ExchangeWebServices.UpdateItemType.MessageDisposition" /> или <see cref="P:ExchangeWebServices.UpdateItemType.SendMeetingInvitationsOrCancellations" /> свойству, чтобы сохранить копию, расположение по умолчанию для элементов, сохраненных будет папка «Отправленные».</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMeetingInvitationsOrCancellations">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.CalendarItemUpdateOperationType SendMeetingInvitationsOrCancellations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype ExchangeWebServices.CalendarItemUpdateOperationType SendMeetingInvitationsOrCancellations" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.UpdateItemType.SendMeetingInvitationsOrCancellations" />
      <MemberSignature Language="VB.NET" Value="Public Property SendMeetingInvitationsOrCancellations As CalendarItemUpdateOperationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::CalendarItemUpdateOperationType SendMeetingInvitationsOrCancellations { ExchangeWebServices::CalendarItemUpdateOperationType get(); void set(ExchangeWebServices::CalendarItemUpdateOperationType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.CalendarItemUpdateOperationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:ExchangeWebServices.UpdateItemType.SendMeetingInvitationsOrCancellations" /> Свойство получает или задает значение перечисления, которое описывает способ обработки элемента календаря после обновления. Это свойство является обязательным для элементов календаря. Это свойство чтения и записи.</summary>
        <value>
          <see cref="P:ExchangeWebServices.UpdateItemType.SendMeetingInvitationsOrCancellations" /> Возвращает свойство <see cref="T:ExchangeWebServices.CalendarItemUpdateOperationType" /> значение перечисления.</value>
        <remarks>
          <para>Необходимо установить <see cref="P:ExchangeWebServices.UpdateItemType.SendMeetingInvitationsOrCancellationsSpecified" /> значение <b>true</b> , чтобы <see cref="P:ExchangeWebServices.UpdateItemType.SendMeetingInvitationsOrCancellations" /> сериализацию свойства в запросе Simple Object Access Protocol (SOAP).</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMeetingInvitationsOrCancellationsSpecified">
      <MemberSignature Language="C#" Value="public bool SendMeetingInvitationsOrCancellationsSpecified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SendMeetingInvitationsOrCancellationsSpecified" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.UpdateItemType.SendMeetingInvitationsOrCancellationsSpecified" />
      <MemberSignature Language="VB.NET" Value="Public Property SendMeetingInvitationsOrCancellationsSpecified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SendMeetingInvitationsOrCancellationsSpecified { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:ExchangeWebServices.UpdateItemType.SendMeetingInvitationsOrCancellationsSpecified" /> Свойство получает или задает логическое значение, указывающее, является ли <see cref="P:ExchangeWebServices.UpdateItemType.SendMeetingInvitationsOrCancellations" /> сериализацию свойства в запросе Simple Object Access Protocol (SOAP). Это свойство является обязательным, если <see cref="P:ExchangeWebServices.UpdateItemType.SendMeetingInvitationsOrCancellations" /> свойству. Это свойство чтения и записи.</summary>
        <value>
          <see cref="P:ExchangeWebServices.UpdateItemType.SendMeetingInvitationsOrCancellationsSpecified" /> Свойство возвращает <b>значение true</b> , если <see cref="P:ExchangeWebServices.UpdateItemType.SendMeetingInvitationsOrCancellations" /> сериализацию свойства в запрос SOAP; в противном случае это свойство возвращает <b>значение false</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>