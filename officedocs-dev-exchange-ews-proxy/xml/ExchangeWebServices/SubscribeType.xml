<Type Name="SubscribeType" FullName="ExchangeWebServices.SubscribeType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1cf8efecccc7ccb81b2a728a8011c7491eade2be" />
    <Meta Name="ms.sourcegitcommit" Value="09f9993d313d1e3ec77e21f70573b3fced6eea2e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20609904" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SubscribeType : ExchangeWebServices.BaseRequestType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SubscribeType extends ExchangeWebServices.BaseRequestType" />
  <TypeSignature Language="DocId" Value="T:ExchangeWebServices.SubscribeType" />
  <TypeSignature Language="VB.NET" Value="Public Class SubscribeType&#xA;Inherits BaseRequestType" />
  <TypeSignature Language="C++ CLI" Value="public ref class SubscribeType : ExchangeWebServices::BaseRequestType" />
  <AssemblyInfo>
    <AssemblyName>EWS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>ExchangeWebServices.BaseRequestType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("code")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlType(Namespace="http://schemas.microsoft.com/exchange/services/2006/messages")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:ExchangeWebServices.SubscribeType" /> Класс представляет запрос подписки на уведомления о событиях для почтовых ящиков в базе данных Exchange.</summary>
    <remarks>
      <para>
        <see cref="T:ExchangeWebServices.SubscribeType" /> Класс используется для внедрения и извлечения типов уведомлений.</para>
      <para />
    </remarks>
    <example>
      <para>Ниже примере кода показано, как создать подписку на уведомления о репликации по запросу, который отслеживает папки «Входящие» и другую папку. </para>
      <para>Папки "Входящие" отмечаются <see cref="T:ExchangeWebServices.DistinguishedFolderIdType" /> класс и другие папки определяется <see cref="T:ExchangeWebServices.FolderIdType" /> класс. Обе папки отслеживаемых новые сообщения электронной почты, копируются элементы, перемещены элементов, элементы изменены, созданных элементов и удаленных элементов. Подписка будет время ожидания только в том случае, если в течение интервала времени ожидания не выполнен вызов GetEvents.</para>
      <code>static void Subscribe(ExchangeServiceBinding esb)
{
    // Create the request.
    SubscribeType &lt;span class="label"&gt;request&lt;/span&gt; = new SubscribeType();

    // Identify the type of subscription.
    PullSubscriptionRequestType pullSub = new PullSubscriptionRequestType();

    // Identify the folders that are monitored for events.
    DistinguishedFolderIdType inbox = new DistinguishedFolderIdType();
    inbox.Id = DistinguishedFolderIdNameType.inbox;
    FolderIdType customFolder = new FolderIdType();
    customFolder.Id = "AQAlAE1=";
    pullSub.FolderIds = new BaseFolderIdType[2] { inbox, customFolder };

    // Identify the events that are monitored for the subscription.
    pullSub.EventTypes = new NotificationEventTypeType[6]
    {
        NotificationEventTypeType.CopiedEvent,
        NotificationEventTypeType.CreatedEvent,
        NotificationEventTypeType.DeletedEvent,
        NotificationEventTypeType.ModifiedEvent,
        NotificationEventTypeType.MovedEvent,
        NotificationEventTypeType.NewMailEvent
    };

    // Define the time-out period for the subscription (in minutes).
    pullSub.Timeout = 10;

    &lt;span class="label"&gt;request&lt;/span&gt;.Item = pullSub;

    // Send the request and get the response.
    SubscribeResponseType response = esb.Subscribe(&lt;span class="label"&gt;request&lt;/span&gt;);

    ArrayOfResponseMessagesType aormt = response.ResponseMessages;
    ResponseMessageType[] rmta = aormt.Items;

    foreach (ResponseMessageType rmt in rmta)
    {
        // Cast to the appropriate response.
        SubscribeResponseMessageType respMsg = (rmt as SubscribeResponseMessageType);
        
        // Get the new subscription information.
        if (respMsg.ResponseClass == ResponseClassType.Success)
        {
            Console.WriteLine("New subscription: " + respMsg.SubscriptionId);
            Console.WriteLine("Watermark: " + respMsg.Watermark);
        }
    }
}</code>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SubscribeType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:ExchangeWebServices.SubscribeType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SubscribeType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:ExchangeWebServices.SubscribeType" /> Конструктор инициализирует новый экземпляр объекта <see cref="T:ExchangeWebServices.SubscribeType" /> класса.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.SubscribeType.Item" />
      <MemberSignature Language="VB.NET" Value="Public Property Item As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("PushSubscriptionRequest", typeof(ExchangeWebServices.PushSubscriptionRequestType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("PullSubscriptionRequest", typeof(ExchangeWebServices.PullSubscriptionRequestType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("StreamingSubscriptionRequest", typeof(ExchangeWebServices.StreamingSubscriptionRequestType))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:ExchangeWebServices.SubscribeType.Item" /> Свойство получает или задает тип подписки. Данное свойство Возвращает или задает либо <see cref="T:ExchangeWebServices.PullSubscriptionRequestType" /> или <see cref="T:ExchangeWebServices.PushSubscriptionRequestType" /> объекта. Это свойство является обязательным. Это свойство чтения и записи.</summary>
        <value>
          <see cref="P:ExchangeWebServices.SubscribeType.Item" /> Возвращает свойство <see cref="T:ExchangeWebServices.BaseSubscriptionRequestType" /> объект, представляющий тип подписки.</value>
        <remarks>
          <para>
            <see cref="P:ExchangeWebServices.SubscribeType.Item" /> Может быть установлено с помощью <see cref="T:ExchangeWebServices.PullSubscriptionRequestType" /> или <see cref="T:ExchangeWebServices.PushSubscriptionRequestType" /> объекта. Расширение обоих типов <see cref="T:ExchangeWebServices.BaseSubscriptionRequestType" />, которая является абстрактный класс. Дополнительные сведения о почему значение этого свойства с помощью этих объектов можно артефакты XML схема выбора элемента прокси-сервера.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>