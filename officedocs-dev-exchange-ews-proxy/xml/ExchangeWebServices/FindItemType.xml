<Type Name="FindItemType" FullName="ExchangeWebServices.FindItemType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2c4c1eccb292f65c95b1697c7acb299c1d2e6dc8" />
    <Meta Name="ms.sourcegitcommit" Value="09f9993d313d1e3ec77e21f70573b3fced6eea2e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20610920" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FindItemType : ExchangeWebServices.BaseRequestType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit FindItemType extends ExchangeWebServices.BaseRequestType" />
  <TypeSignature Language="DocId" Value="T:ExchangeWebServices.FindItemType" />
  <TypeSignature Language="VB.NET" Value="Public Class FindItemType&#xA;Inherits BaseRequestType" />
  <TypeSignature Language="C++ CLI" Value="public ref class FindItemType : ExchangeWebServices::BaseRequestType" />
  <AssemblyInfo>
    <AssemblyName>EWS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>ExchangeWebServices.BaseRequestType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("code")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlType(Namespace="http://schemas.microsoft.com/exchange/services/2006/messages")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:ExchangeWebServices.FindItemType" /> Класс представляет запрос для поиска элементов в почтовом ящике.</summary>
    <remarks>
      <para>
        <see cref="T:ExchangeWebServices.FindItemType" /> Класс предоставляет множество параметров для запросов к почтовому ящику. Несмотря на то, что запрос FindItem ограничена частичного и удаленные выполняет набор папок, многие параметры доступны для создания сложных поисковых выражений и представления из набора результатов поиска. <see cref="T:ExchangeWebServices.FindItemType" /> Класс содержит набор свойств, которые используются для настройки параметров поиска. В следующей таблице приведены свойства, которые описывают различные параметры, которые используются для составления запросов.</para>
      <para>Свойства, которые используются для составления запросов</para>
      <list type="table">
        <item>
          <term>
            <see cref="P:ExchangeWebServices.FindItemType.Item" />
          </term>Определяет механизм разбивки по страницам набора результатов. Это свойство является необязательным.
        </item>
        <item>
          <term>
            <see cref="P:ExchangeWebServices.FindItemType.Item1" />
          </term>Определяет способ группировки в наборе результатов. Это свойство является необязательным. Если это свойство не задано, будет применяться нет группировки.
        </item>
        <item>
          <term>
            <see cref="P:ExchangeWebServices.FindItemType.ItemShape" />
          </term>Идентифицирует, какие свойства элемента возвращаются для элементов в наборе результатов.
        </item>
        <item>
          <term>
            <see cref="P:ExchangeWebServices.FindItemType.ParentFolderIds" />
          </term>Определяет, какие подпапках.
        </item>
        <item>
          <term>
            <see cref="P:ExchangeWebServices.FindItemType.Restriction" />
          </term>Определяет набор параметров, которые определяют фильтр на элементы, которые возвращаются в наборе результатов. Это свойство является необязательным.
        </item>
        <item>
          <term>
            <see cref="P:ExchangeWebServices.FindItemType.SortOrder" />
          </term>Определяет порядок элементов в наборе результатов. Это свойство является необязательным.
        </item>
        <item>
          <term>
            <see cref="P:ExchangeWebServices.FindItemType.Traversal" />
          </term>Определяет, как выполнять поиск в папках.
        </item>
      </list>
      <para>FindItem запроса можно использовать для запросов, что часто изменений, которые необходимо глубокий обзор структуру папок. Если регулярно выполняется определенного поиска, может быть более подходящим для создания папки поиска для поиска. Обратите внимание, что в папках поиска можно также выполнить глубокое обходов структуру папок.</para>
      <para>
        <b>Важно</b>: папки поиска в базе данных, Exchange Server 2007 и поэтому влияет на производительность компьютера, на котором работает Exchange server, хотя запросов FindItem только повлиять на производительность при получении запросов Exchange server.</para> Запрос 
      <para>FindItem будет предоставлять большую часть сведения, необходимые клиентскому приложению. В основном возвращается Сводка элемента. FindItem возвращает только первые 512 байт поддерживающего потоковую передачу свойства. Для Юникод возвращает первые 255 символов, используя строку Юникода символом null. </para><para><b>Примечание</b>: FindItem не возвращает текст сообщения, вложения или получателей списки.</para><para>Использования <see cref="T:ExchangeWebServices.GetItemType" /> для получения сведений о конкретных элементов. GetItem возвращает больше свойств, чем FindItem. При необходимости получения дополнительных сведений, клиентское приложение необходимо выполнить звонок FindItem и затем использовать идентификаторы элементов в вызове GetItem для получения свойства, которые не доступны в вызове FindItem.</para><para>В следующей таблице приведены свойства, которые возвращаются в обоих FindItem и вызывает GetItem.</para><para>Свойства, которые возвращаются в FindItem и GetItem звонков</para><item><description>ConversationTopic</description><term>ConversationIndex</term><description>языка и региональных параметров</description></item><list type="table"><item><description>DateTimeReceived</description><term>DateTimeCreated</term><description>DateTimeSent</description></item><item><term>DisplayCc</term><description>DisplayTo</description><description>Из</description></item><item><description>Важность</description><term>HasAttachments</term><description>InReplyTo</description></item><item><description>IsDeliveryReceiptRequested</description><term>InternetMessageId</term><description>IsDraft</description></item><item><description>IsRead</description><term>IsFromMe</term><description>IsReadReceiptRequested</description></item><item><description>IsResponseRequested</description><term>IsResend</term><description>IsSubmitted</description></item><item><description>ItemClass</description><term>IsUnmodified</term><description>ItemId</description></item><item><description>Ссылки на</description><term>ParentFolderId</term><description>ReminderDueBy</description></item><item><description>ReminderMinutesBeforeStart</description><term>ReminderIsSet</term><description>отправителя</description></item><item><description>Размер</description><term>чувствительность</term><description>темы</description></item></list><para><b>Примечание</b>: несмотря на то, что свойство Sender возвращается в FindItem и GetItem звонки, DisplayName (string), возвращается в вызове FindItem. DisplayName (string), EmailAddress (NonEmptyStringType) и RoutingType (EmailAddress) возвращаются вызовом GetItem.</para><para><see cref="P:ExchangeWebServices.FindItemType.Item" /> И <see cref="P:ExchangeWebServices.FindItemType.Item1" /> свойства при создании процесс создания прокси-сервера, а также способ обработки выбора элементов схемы XML. <see cref="P:ExchangeWebServices.FindItemType.Item" /> Задано с помощью объекта, который расширяет <see cref="T:ExchangeWebServices.BasePagingType" /> класса. Это свойство описывает представление какого типа будут возвращены в ответе. <see cref="P:ExchangeWebServices.FindItemType.Item1" /> Задано с помощью объекта, который расширяет <see cref="T:ExchangeWebServices.BaseGroupByType" /> класса. Это свойство описывает, как группы ответа элементов в наборе результатов. Дополнительные сведения об этих свойств можно артефакты XML схема выбора элемента прокси-сервера.</para><para /></remarks>
    <example>
      <para>В следующем примере кода показан запрос поиска элементов, которое возвращает следующие результаты:</para>
      <list type="number">
        <item>
          <description>Индексированных результирующий начинается в начале набора результатов и возвращает не более 10 записей в наборе результатов.</description>
        </item>
        <item>
          <description>Сгруппированных поиска, которая выполняет следующее:</description>
        </item>
        <item>
          <description>Всех свойств, определенных для AllProperties фигуры, кроме свойства IsMeeting и важности. Обратите внимание на то, что фигуры AllProperties отличается от в операции FindItem в ходе операции GetItem.</description>
        </item>
        <item>
          <description>Число найденных элементов в папке календаря по умолчанию.</description>
        </item>
        <item>
          <description>Только элементов, которые имеют время начала, после текущего времени.</description>
        </item>
        <item>
          <description>Элементы, отсортированные по свойство Subject.</description>
        </item>
        <item>
          <description>Число найденных элементов только на верхнем уровне папки, в которой выполняется поиск.</description>
        </item>
      </list>
      <code>static void FindItem()
{
    // Create the service binding.
    ExchangeServiceBinding esb = new ExchangeServiceBinding();
    esb.Credentials = new NetworkCredential("username", "password", "domain");
    esb.Url = @"https://ExchangeServer/EWS/Exchange.asmx";

    // Form the FindItem request.
    FindItemType &lt;span class="label"&gt;findItemRequest&lt;/span&gt; = new &lt;span class="label"&gt;FindItemType&lt;/span&gt;();

    // Define the paging scheme for the result set.
    IndexedPageViewType ipvt = new IndexedPageViewType();
    ipvt.BasePoint = IndexBasePointType.Beginning;
    ipvt.MaxEntriesReturned = 10;
    ipvt.MaxEntriesReturnedSpecified = true;
    ipvt.Offset = 0;
    // Add the paging scheme to the request.
    &lt;span class="label"&gt;findItemRequest&lt;/span&gt;.Item = ipvt;

    // Define the grouping scheme for the result set.
    GroupByType group = new GroupByType();
    // Define the property that is used to determine the order of groups of items in a group.
    AggregateOnType aggregate = new AggregateOnType();
    PathToUnindexedFieldType subject = new PathToUnindexedFieldType();
    subject.FieldURI = UnindexedFieldURIType.itemSubject;
    aggregate.Item = subject;
    aggregate.Aggregate = AggregateType.Minimum;
    group.AggregateOn = aggregate;
    // Define the property that is used to group items.
    PathToUnindexedFieldType importance = new PathToUnindexedFieldType();
    importance.FieldURI = UnindexedFieldURIType.itemImportance;
    group.Item = importance;
    // Define how the groups are ordered in the response.
    group.Order = SortDirectionType.Descending;
    // Add the grouping scheme to the request.
    &lt;span class="label"&gt;findItemRequest&lt;/span&gt;.Item1 = group;

    // Define the item properties that are returned in the response.
    ItemResponseShapeType itemProperties = new ItemResponseShapeType();
    // Use the Default shape for the response.            
    itemProperties.BaseShape = DefaultShapeNamesType.Default;
    // Add more properties to the request.
    PathToUnindexedFieldType addIsMeeting = new PathToUnindexedFieldType();
    PathToUnindexedFieldType addImportance = new PathToUnindexedFieldType();
    addIsMeeting.FieldURI = UnindexedFieldURIType.calendarIsMeeting;
    addImportance.FieldURI = UnindexedFieldURIType.itemImportance;
    itemProperties.AdditionalProperties = new PathToUnindexedFieldType[2];
    itemProperties.AdditionalProperties[0] = addIsMeeting;
    itemProperties.AdditionalProperties[1] = addImportance;
    // Add the properties shape to the request.
    &lt;span class="label"&gt;findItemRequest&lt;/span&gt;.ItemShape = itemProperties;

    // Identify which folders to search.
    DistinguishedFolderIdType[] folderIDArray = new DistinguishedFolderIdType[1];
    folderIDArray[0] = new DistinguishedFolderIdType();
    folderIDArray[0].Id = DistinguishedFolderIdNameType.calendar;
    // Add folders to the request.
    &lt;span class="label"&gt;findItemRequest&lt;/span&gt;.ParentFolderIds = folderIDArray;

    // Create a restriction for the result set.
    RestrictionType restriction = new RestrictionType();
    PathToUnindexedFieldType pteft = new PathToUnindexedFieldType();
    pteft.FieldURI = UnindexedFieldURIType.calendarStart;
    FieldURIOrConstantType fieldURIORConstant = new FieldURIOrConstantType();
    fieldURIORConstant.Item = new ConstantValueType();
    (fieldURIORConstant.Item as ConstantValueType).Value = DateTime.Now.ToString();
    IsGreaterThanType isGreaterThan = new IsGreaterThanType();
    isGreaterThan.Item = pteft;
    isGreaterThan.FieldURIOrConstant = fieldURIORConstant;
    restriction.Item = isGreaterThan;
    &lt;span class="label"&gt;findItemRequest&lt;/span&gt;.Restriction = restriction;

    // Define the sort order of items.
    FieldOrderType[] fieldsOrder = new FieldOrderType[1];
    fieldsOrder[0] = new FieldOrderType();
    PathToUnindexedFieldType subjectOrder = new PathToUnindexedFieldType();
    subjectOrder.FieldURI = UnindexedFieldURIType.itemSubject;
    fieldsOrder[0].Item = subjectOrder;
    fieldsOrder[0].Order = SortDirectionType.Ascending;
    &lt;span class="label"&gt;findItemRequest&lt;/span&gt;.SortOrder = fieldsOrder;

    // Define the traversal type.
    &lt;span class="label"&gt;findItemRequest&lt;/span&gt;.Traversal = ItemQueryTraversalType.Shallow;

    try
    {
        // Send the FindItem request and get the response.
        FindItemResponseType findItemResponse = esb.FindItem(&lt;span class="label"&gt;findItemRequest&lt;/span&gt;);

        // Access the response message.
        ArrayOfResponseMessagesType responseMessages = findItemResponse.ResponseMessages;
        ResponseMessageType responseMessage = responseMessages.Items[0];

        if (responseMessage is FindItemResponseMessageType)
        {
            FindItemResponseMessageType firmt = (responseMessage as FindItemResponseMessageType);
            FindItemParentType fipt = firmt.RootFolder;
            object obj = fipt.Item;

            // Determine whether the FindItem response contains grouped items.
            if (obj is ArrayOfGroupedItemsType)
            {
                ArrayOfGroupedItemsType groupedItems = (obj as ArrayOfGroupedItemsType);
                //TODO: Write code to handle grouped items.
            }

            // FindItem contains an array of items.
            else if (obj is ArrayOfRealItemsType)
            {
                ArrayOfRealItemsType items = (obj as ArrayOfRealItemsType);
                //TODO: Write code to handle items.
            }
        }
    }
    catch (Exception e)
    {
        Console.WriteLine(e.Message);
    }
}</code>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FindItemType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:ExchangeWebServices.FindItemType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FindItemType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:ExchangeWebServices.FindItemType" /> Конструктор инициализирует новый экземпляр объекта <see cref="T:ExchangeWebServices.FindItemType" /> класса.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.BasePagingType Item { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.BasePagingType Item" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindItemType.Item" />
      <MemberSignature Language="VB.NET" Value="Public Property Item As BasePagingType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::BasePagingType ^ Item { ExchangeWebServices::BasePagingType ^ get(); void set(ExchangeWebServices::BasePagingType ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("SeekToConditionPageItemView", typeof(ExchangeWebServices.SeekToConditionPageViewType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("CalendarView", typeof(ExchangeWebServices.CalendarViewType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("ContactsView", typeof(ExchangeWebServices.ContactsViewType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("FractionalPageItemView", typeof(ExchangeWebServices.FractionalPageViewType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("IndexedPageItemView", typeof(ExchangeWebServices.IndexedPageViewType))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.BasePagingType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:ExchangeWebServices.FindItemType.Item" /> Свойство получает или задает тип разбиения по страницам, описывающий, как набора результатов запросов, полученных в ответе. Данное свойство Возвращает или задает либо <see cref="T:ExchangeWebServices.IndexedPageViewType" />, <see cref="T:ExchangeWebServices.FractionalPageViewType" />, <see cref="T:ExchangeWebServices.CalendarViewType" />, или <see cref="T:ExchangeWebServices.ContactsViewType" /> объекта. Это свойство является необязательным. Это свойство чтения и записи.</summary>
        <value>
          <see cref="P:ExchangeWebServices.FindItemType.Item" /> Возвращает свойство <see cref="T:ExchangeWebServices.BasePagingType" /> , представляющий тип разбиение на страницы выполняется для набора запроса.</value>
        <remarks>
          <para>
            <see cref="P:ExchangeWebServices.FindItemType.Item" /> Может быть установлено либо с <see cref="T:ExchangeWebServices.IndexedPageViewType" />, <see cref="T:ExchangeWebServices.FractionalPageViewType" />, <see cref="T:ExchangeWebServices.CalendarViewType" />, или <see cref="T:ExchangeWebServices.ContactsViewType" /> объекта. Все эти типы расширяют <see cref="T:ExchangeWebServices.BasePagingType" />, которая является абстрактный класс. Это свойство является необязательным. Если это свойство не задано, по умолчанию является возвращение представление, включающее все элементы в наборе результатов.</para>
          <para>
            <b>Примечание</b>: нельзя указать ограничения при выполнении представления календаря подкачки.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.BaseGroupByType Item1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.BaseGroupByType Item1" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindItemType.Item1" />
      <MemberSignature Language="VB.NET" Value="Public Property Item1 As BaseGroupByType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::BaseGroupByType ^ Item1 { ExchangeWebServices::BaseGroupByType ^ get(); void set(ExchangeWebServices::BaseGroupByType ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("GroupBy", typeof(ExchangeWebServices.GroupByType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("DistinguishedGroupBy", typeof(ExchangeWebServices.DistinguishedGroupByType))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.BaseGroupByType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:ExchangeWebServices.FindItemType.Item1" /> Свойство получает или задает тип группировки, описывающая способ группировки набора результатов запроса в ответе. Данное свойство Возвращает или задает либо <see cref="T:ExchangeWebServices.GroupByType" /> или <see cref="T:ExchangeWebServices.DistinguishedGroupByType" /> объекта. Это свойство является необязательным. Это свойство чтения и записи.</summary>
        <value>
          <see cref="P:ExchangeWebServices.FindItemType.Item1" /> Возвращает свойство <see cref="T:ExchangeWebServices.BaseGroupByType" /> , представляющий тип группировки схему, которая применяется для набора результатов.</value>
        <remarks>
          <para>
            <see cref="P:ExchangeWebServices.FindItemType.Item1" /> Может быть установлено с помощью <see cref="T:ExchangeWebServices.GroupByType" /> или <see cref="T:ExchangeWebServices.DistinguishedGroupByType" /> объекта. Расширение обоих типов <see cref="T:ExchangeWebServices.BaseGroupByType" />, которая является абстрактный класс. Это свойство является необязательным. Если это свойство не задано, результирующий набор не будут группироваться.</para>
          <para>
            <b>Примечание</b>: некоторые свойства не может использоваться для создания определения групп.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemShape">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.ItemResponseShapeType ItemShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.ItemResponseShapeType ItemShape" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindItemType.ItemShape" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemShape As ItemResponseShapeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::ItemResponseShapeType ^ ItemShape { ExchangeWebServices::ItemResponseShapeType ^ get(); void set(ExchangeWebServices::ItemResponseShapeType ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.ItemResponseShapeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:ExchangeWebServices.FindItemType.ItemShape" /> Свойство получает или задает фигуры набора запроса. Это свойство является обязательным. Это свойство чтения и записи.</summary>
        <value>
          <see cref="P:ExchangeWebServices.FindItemType.ItemShape" /> Возвращает свойство <see cref="T:ExchangeWebServices.ItemResponseShapeType" /> объект, который содержит описание, из которых запросы свойств будут возвращаться в наборе результатов.</value>
        <remarks>
          <para>
            <see cref="P:ExchangeWebServices.FindItemType.ItemShape" /> Для операций FindItem должно быть установлено свойство. Это свойство описывает свойств, которые возвращаются операцией FindItem. Это свойство является обязательным.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentFolderIds">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.BaseFolderIdType[] ParentFolderIds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.BaseFolderIdType[] ParentFolderIds" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindItemType.ParentFolderIds" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentFolderIds As BaseFolderIdType()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;ExchangeWebServices::BaseFolderIdType ^&gt; ^ ParentFolderIds { cli::array &lt;ExchangeWebServices::BaseFolderIdType ^&gt; ^ get(); void set(cli::array &lt;ExchangeWebServices::BaseFolderIdType ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlArrayItem("FolderId", typeof(ExchangeWebServices.FolderIdType), IsNullable=false, Namespace="http://schemas.microsoft.com/exchange/services/2006/types")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlArrayItem("DistinguishedFolderId", typeof(ExchangeWebServices.DistinguishedFolderIdType), IsNullable=false, Namespace="http://schemas.microsoft.com/exchange/services/2006/types")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.BaseFolderIdType[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:ExchangeWebServices.FindItemType.ParentFolderIds" /> Свойство Возвращает или задает папки, в которых выполняется поиск операции FindItem. Это свойство является обязательным. Это свойство чтения и записи.</summary>
        <value>
          <see cref="P:ExchangeWebServices.FindItemType.ParentFolderIds" /> Свойство возвращает массив <see cref="T:ExchangeWebServices.BaseFolderIdType" /> объектов, которые содержит идентификаторы всех папок для операции FindItem для поиска.</value>
        <remarks>
          <para>
            <see cref="P:ExchangeWebServices.FindItemType.ParentFolderIds" /> Может быть установлено с массивами либо <see cref="T:ExchangeWebServices.FolderIdType" /> или <see cref="T:ExchangeWebServices.DistinguishedFolderIdType" /> объектов. Расширение обоих типов <see cref="T:ExchangeWebServices.BaseFolderIdType" />, которая является абстрактный класс. </para>
          <para>Это свойство является обязательным и должно иметь значение для операций FindItem.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.QueryStringType QueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.QueryStringType QueryString" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindItemType.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property QueryString As QueryStringType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::QueryStringType ^ QueryString { ExchangeWebServices::QueryStringType ^ get(); void set(ExchangeWebServices::QueryStringType ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.QueryStringType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>Возвращает <see cref="T:System.String" />.</value>
        <remarks>
          <para>
            <b>Примечание</b>: этот член относится к версии Exchange, начиная с Exchange Server 2010 пакетом обновления 1 (SP1), включая Exchange Online.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Restriction">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.RestrictionType Restriction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.RestrictionType Restriction" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindItemType.Restriction" />
      <MemberSignature Language="VB.NET" Value="Public Property Restriction As RestrictionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::RestrictionType ^ Restriction { ExchangeWebServices::RestrictionType ^ get(); void set(ExchangeWebServices::RestrictionType ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.RestrictionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:ExchangeWebServices.FindItemType.Restriction" /> Свойство получает или задает параметры поиска для определения запроса элемента. Это свойство является необязательным. Это свойство чтения и записи.</summary>
        <value>
          <see cref="P:ExchangeWebServices.FindItemType.Restriction" /> Возвращает свойство <see cref="T:ExchangeWebServices.RestrictionType" /> объект, который содержит параметры поиска, определяющие запрос.</value>
        <remarks>
          <para>
            <see cref="P:ExchangeWebServices.FindItemType.Restriction" /> Свойство содержит все параметры сравнения, включает в себя фильтра запроса. Он может содержать следующие выражения поиска:</para>
          <list type="bullet">
            <item>
              <description>и</description>
            </item>
            <item>
              <description>содержит</description>
            </item>
            <item>
              <description>Excludes</description>
            </item>
            <item>
              <description>Exists</description>
            </item>
            <item>
              <description>выражение IsEqualTo</description>
            </item>
            <item>
              <description>IsGreaterThan</description>
            </item>
            <item>
              <description>IsGreaterThanOrEqualTo</description>
            </item>
            <item>
              <description>IsLessThan</description>
            </item>
            <item>
              <description> IsLessThanOrEqualTo</description>
            </item>
            <item>
              <description>IsNotEqualTo</description>
            </item>
            <item>
              <description>не</description>
            </item>
            <item>
              <description>или</description>
            </item>
          </list>
          <para>это свойство является необязательным.</para>
          <para>
            <b>Примечание</b>: нельзя указать ограничения при выполнении разбиение на страницы представления календаря. Кроме того, некоторые свойства не может использоваться для формирования определений ограничений.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortOrder">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.FieldOrderType[] SortOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.FieldOrderType[] SortOrder" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindItemType.SortOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property SortOrder As FieldOrderType()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;ExchangeWebServices::FieldOrderType ^&gt; ^ SortOrder { cli::array &lt;ExchangeWebServices::FieldOrderType ^&gt; ^ get(); void set(cli::array &lt;ExchangeWebServices::FieldOrderType ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlArrayItem("FieldOrder", IsNullable=false, Namespace="http://schemas.microsoft.com/exchange/services/2006/types")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.FieldOrderType[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:ExchangeWebServices.FindItemType.SortOrder" /> Свойство получает или задает порядок сортировки элементов, возвращенных в наборе результатов. Это свойство является необязательным. Это свойство чтения и записи.</summary>
        <value>
          <see cref="P:ExchangeWebServices.FindItemType.SortOrder" /> Свойство возвращает массив <see cref="T:ExchangeWebServices.FieldOrderType" /> объекты, которые описывают свойства, используемые для сортировки результатов.</value>
        <remarks>
          <para>Первый элемент в массиве <see cref="T:ExchangeWebServices.FieldOrderType" /> объектов является основным свойством, которое используется для определения порядка сортировки. Следующего элемента в массиве является дополнительным свойством, которое используется для определения порядка сортировки в наборе результатов. Каждый последующий элемент в массиве <see cref="T:ExchangeWebServices.FieldOrderType" /> объекты, которые используются для сортировки элементов в наборе результатов, каждый последующий элемент из которых приоритетности в иерархии сортировки. <see cref="T:ExchangeWebServices.FieldOrderType" /> Объекты также описывают направление сортировки элементов.</para>
          <para>Это свойство является необязательным.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Traversal">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.ItemQueryTraversalType Traversal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype ExchangeWebServices.ItemQueryTraversalType Traversal" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindItemType.Traversal" />
      <MemberSignature Language="VB.NET" Value="Public Property Traversal As ItemQueryTraversalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::ItemQueryTraversalType Traversal { ExchangeWebServices::ItemQueryTraversalType get(); void set(ExchangeWebServices::ItemQueryTraversalType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.ItemQueryTraversalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:ExchangeWebServices.FindItemType.Traversal" /> Свойство получает или задает схему обхода, который используется для поиска элементов в папках. Это свойство является обязательным. Это свойство чтения и записи.</summary>
        <value>
          <see cref="P:ExchangeWebServices.FindItemType.Traversal" /> Возвращает свойство <see cref="T:ExchangeWebServices.ItemQueryTraversalType" /> перечисление, определяющее тип обхода, который выполняется для поиска.</value>
        <remarks>
          <para>FindItem поддерживает только обходы частичного или удаленные папки. Для выполнения глубокого обхода использования папок поиска. </para>
          <para>Это свойство является обязательным для операций FindItem.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>